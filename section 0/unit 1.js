// HTML만을 이용한다면 버튼을 누르거나 정보를 입력하는 동적인 작업을 수행할 수 없게 된다.
// 그래서 이런 동적인 작업을 수행하기 위해서 JavaScript를 사용하게 된다.
// 자바스크립트는 프로그래밍 언어의 한 종류이다.
// 자바스크립트라는 명칭때문에 자바와 관련이 있다고 생각하는데,
// 자바스크립트의 정식 명칭은 ECMAScript이다.
// 그래서 버전을 의미할때 앞부분 글자를 따와서 ES5, ES6등과 같이 표기한다.

// HTML과 JavaScript는 성격자체가 완전히 다르다.
// HTML은 웹사이트의 뼈대를 구성하고, 자바스크립트는 웹사이트가 살아움직이도록 생명을 불어넣는 역할을 한다고 생각하면 된다.
// 자바스크립트는 명칭에서부터 알 수 있듯이 스크립트의 한 종류이다.

// 그럼 이제 스크립트 언어의 특징에 대해서 알아보도록하자.
// 다른 프로그래밍 언어와 제일 큰 차이점은 프로그램이 실행되는 런타임에 코드가 해석된다는 점이다.
// C언어나 자바같은 컴파일 언어는 컴파일이라는 과정을 통해서 소스코드가 해석되고, 실행 가능한 형태로 변환된다.
// 하지만 자바스크립트와 같은 스크립트 언어는 런타임에 코드가 해석되고 실행된다.
// 예전에는 웹사이트에서만 자바스크립트가 사용되었으나 최근에는 모바일 앱이나 데스크탑앱을 만드는 데에도 자바스크립트가 사용되면서 자바스크립트의 사용 범위가 넓어지고 있다.

// 이 강의에서는 ES6문법을 위주로 다루고 있다.
// ES6이후 버전들도 많이 나왔으나, ES6에서 추가된 문법들을 통해 자바스크립트의 표준 버전이 정립되었다고 과언이 아니기때문에
// ES6버전을 위주로 다룬다고 한다.


// 1. 자바스크립트의 자료형(Data Type)
// 프로그래밍언어에서 데이터를 다루기 위해 미리 정해놓은 데이터의 유형이다.
// 모든 변수들은 하나의 자료형을 가지는데 일반적인 프로그래밍 언어에서는 변수르 선언하는 시점에 해당 변수의 자료형이 결정된다.
// 하지만 자바스크립트에서는 변수를 선언할때가 아닌 변수의 데이터가 대입되는 시점에 해당 변수의 자료형이 결정된다.
// 이처럼 동적으로 자료형이 결정되는것을 동적 타이핑(Dynamic Typing) 이라고 하며, 자바스크립트는 동적타이핑 형식을 사용하고있다.

// 아래는 대표적인 자바스크립트의 자료형이다.

// Number Type(숫자 타입)/ 정수가 소수를 다룰 수 있다.
let n1 = 1234;
let n2 = 5.678;

// String Type(문자열 타입)
let s1 = "hello";
let s2 = 'world';

// Boolean Type : 값이 참 혹은 거짓으로만 있다.
let b1 = true;
let b2 = false;

// Null Type
let n = null; {/* 값이 정의되긴 했으나 그 값이 Null임 */}

// Undefined Type
let u1; {/* 변수를 선언하고 값을 대입하지 않으면 undefined가 된다. 아직 값이 정의되지 않은 상태를 의미 */}
let u2 = undefined;

// Array Type
let arr = [1, 2, 3, 4]; {/* 숫자가 모여있을수도 있고, 문자열이 모여있을수도있고, 여러가지가 모여있을 수 있다. */}

let arr1 = [1, 2, 3, 4, 5]; {/* 숫자 타입으로만 이루어진 배열 */}
let arr2 = ["h", "e", "l", "l", "o"]; {/* 문자열 타입으로만 이루어진 배열 */}
let arr3 = [1, "h", 2, "i"]; {/* 숫자타입과 문자열 타입을 함께 사용한 배열 */}
let arr4 = [true, 1, undefined, false, "h", 2, null, "i"]; {/* 다양한 자료형들을 함께 사용한 배열 */}

console.log(arr[0]); // 1
console.log(arr2[1]); // e
console.log(arr3[2]); // 2
console.log(arr4[3]); // false

// Object Type
let obj1 = { a: "apple", b:"banana", c:"carrot" }; // key a의 값은 apple

let obj2 = { a:1, b:2, c:3 }; // 값으로 숫자타입만을 사용한 객체
let obj3 = { a:"hello", b:100, c:[1, 2, 3, 4] }; // 값으로 다양한 자료형들을 함께 사용한 객체
let obj4 = {
    a: { a1:1, a2:2 },
    b: { b1: 3, b2: 4 },
    c: { c1: 5, c2: 6 },
}; // 값으로 객체를 사용한 객체

console.log(obj1['a']); // apple
console.log(obj2.a); // 1
console.log(obj3['c']); // [1, 2, 3, 4]
console.log(obj4.c.c2); // 6